Description,Expression,work,univ,school,escort,shopping,eatout,othmaint,social,othdiscr,atwork
All - Sample of alternatives correction factor,"@np.minimum(np.log(df.pick_count/df.prob), 60)",1,1,1,1,1,1,1,1,1,1
All - Mode choice logsum from origin to stop,od_logsum,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821
All - Can't access stop zone by this tour mode,(od_logsum < -100) tt,-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
All - Mode choice logsum from stop to destination,dp_logsum,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821,1.821
All - Can't access destination zone by this tour mode,(dp_logsum < -100),-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
All - Tour origin zone,df.origin == df.dest_taz,0.7112,0.7112,0.7112,0.7112,0.7112,0.7112,0.7112,0.7112,0.7112,0.7112
All - Tour destinatoin zone,df.destination == df.dest_taz,1.037,1.037,1.037,1.037,1.037,1.037,1.037,1.037,1.037,1.037
All - CBD area type,"@reindex(land_use.areatype, df.dest_taz) == 1",-0.285,-0.285,-0.285,-0.285,-0.285,-0.285,-0.285,-0.285,-0.285,-0.285
All - Size variable ,"@np.log1p(size_terms.get(df.dest_taz, df.purpose))",1,1,1,1,1,1,1,1,1,1
All - No attractions,"@size_terms.get(df.dest_taz, df.purpose) == 0",-999,-999,-999,-999,-999,-999,-999,-999,-999,-999
# WORK,,,,,,,,,,,
WORK - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",0.0026,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-0.0000109,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-0.3218,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",0.00873,-999,-999,-999,-999,-999,-999,-999,-999,-999
"#sequential stop number is not available in ActivitySim, so use trip_num",,,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.00269,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.01045,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",0.002442,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-0.01308,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",0,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - work stop purpose,"@(df.purpose == 'work') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.195,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - escort stop purpose,"@(df.purpose == 'escort') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.2596,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - shopping stop purpose,"@(df.purpose == 'shopping') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.286,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - eat out stop purpose,"@(df.purpose == 'eatout') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.2927,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - other maintenance stop purpose,"@(df.purpose == 'othmaint') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.2196,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - social/visiting stop purpose,"@(df.purpose == 'social') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.3061,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance - other discretionary stop purpose,"@(df.purpose == 'othdiscr') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-0.2999,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Distance (calibration adjustment),"(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",0.1877,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - constant for transit tours (stop w/in walking distance of home,"@np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-3,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - constant for transit tours (stop w/in walking distance of prim dest,"@np.where(((df.outbound) & (df.trip_num==1) & (dpt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-5,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10), 0)",1.1,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10)) ** 2, 0)",-0.1906899,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10)) ** 3, 0)",0.0091819,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-0.7371159,-999,-999,-999,-999,-999,-999,-999,-999,-999
WORK - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10) < 0, 1, 0)",1.119608865,-999,-999,-999,-999,-999,-999,-999,-999,-999
"# Distance differs by purpose, so separate expressions are required",,,,,,,,,,,
# UNIVERSITY ,,,,,,,,,,,
UNIVERSITY - Distance squared,"@((np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)) ** 2)",-999,0.0026,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance cubed,"@((np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)) ** 3)",-999,-0.0000109,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Log of distance,"@np.log(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-0.3218,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - return half tour,"@(~df.outbound) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,0.00873,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-0.00269,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-0.01045,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - shared ride tour,"@((df.tour_mode_is_shared_ride) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,0.002442,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-0.01308,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - transit tour,"@((df.tour_mode_is_transit) *(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,0,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - work stop purpose,"@((df.purpose == 'work') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.195,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - escort stop purpose,"@((df.purpose == 'escort') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.2596,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - shopping stop purpose,"@((df.purpose == 'shopping') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.286,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - eat out stop purpose,"@((df.purpose == 'eatout') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.2927,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - other maintenance stop purpose,"@((df.purpose == 'othmaint') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.2196,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - social/visiting stop purpose,"@((df.purpose == 'social') *  (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.3061,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Distance - other discretionary stop purpose,"@((df.purpose == 'othdiscr') *  (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-0.2999,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - distance (calibration adjustment),"@(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,0,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - constant for transit tours (stop w/in walking distance of home,"@(np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0))",-999,-3,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - constant for transit tours (stop w/in walking distance of prim dest,"@(np.where(((df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0))",-999,-5,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - OOD Distance,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 10) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10), 0)",-999,0.1843125,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - OOD Distance squared,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 10) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10)) ** 2, 0)",-999,-0.1722496,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - OOD Distance cubed,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 10) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10)) ** 3, 0)",-999,0.0096203,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Log of OOD distance,"@np.where(np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,0,-999,-999,-999,-999,-999,-999,-999,-999
UNIVERSITY - Negative OOD,"@np.where(np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 10) < 0, 1, 0)",-999,1.71461471,-999,-999,-999,-999,-999,-999,-999,-999
# SCHOOL,,,,,,,,,,,
SCHOOL - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,0.0026,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-0.0000109,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-0.3218,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,0.00873,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.00269,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.01045,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,0.002442,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-0.01308,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,0,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - work stop purpose,"@(df.purpose == 'work') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.195,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - escort stop purpose,"@(df.purpose == 'escort') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.2596,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - shopping stop purpose,"@(df.purpose == 'shopping') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.286,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - eat out stop purpose,"@(df.purpose == 'eatout') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.2927,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - other maintenance stop purpose,"@(df.purpose == 'othmaint') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.2196,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - social/visiting stop purpose,"@(df.purpose == 'social') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.3061,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Distance - other discretionary stop purpose,"@(df.purpose == 'othdiscr') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-0.2999,-999,-999,-999,-999,-999,-999,-999
SCHOOL - distance (calibration adjustment),"(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,0,-999,-999,-999,-999,-999,-999,-999
SCHOOL - constant for transit tours (stop w/in walking distance of home,"@np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-3,-999,-999,-999,-999,-999,-999,-999
SCHOOL - constant for transit tours (stop w/in walking distance of prim dest,"@np.where(((df.outbound) & (df.trip_num==1) & (dpt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-5,-999,-999,-999,-999,-999,-999,-999
SCHOOL - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9), 0)",-999,-999,1.7008853,-999,-999,-999,-999,-999,-999,-999
SCHOOL - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 2, 0)",-999,-999,-0.3098545,-999,-999,-999,-999,-999,-999,-999
SCHOOL - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 3, 0)",-999,-999,0.0155371,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-0.5,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 10) < 0, 1, 0)",-999,-999,1.462194456,-999,-999,-999,-999,-999,-999,-999
SCHOOL - Negative propensity for OOD > 8 miles,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 8, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50), 0)",-999,-999,0,-999,-999,-999,-999,-999,-999,-999
SCHOOL - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 1), 1, 0)",-999,-999,0.1,-999,-999,-999,-999,-999,-999,-999
# ESCORT,,,,,,,,,,,
ESCORT - Distance squared,"@((np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)) ** 2)",-999,-999,-999,0.0026,-999,-999,-999,-999,-999,-999
ESCORT - Distance cubed,"@((np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)) ** 3)",-999,-999,-999,-0.0000109,-999,-999,-999,-999,-999,-999
ESCORT - Log of distance,"@np.log(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,-0.3218,-999,-999,-999,-999,-999,-999
ESCORT - Distance - return half tour,"@(~df.outbound) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,0.00873,-999,-999,-999,-999,-999,-999
ESCORT - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,-0.00269,-999,-999,-999,-999,-999,-999
ESCORT - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,-0.01045,-999,-999,-999,-999,-999,-999
ESCORT - Distance - shared ride tour,"@((df.tour_mode_is_shared_ride) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,0.002442,-999,-999,-999,-999,-999,-999
ESCORT - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,-0.01308,-999,-999,-999,-999,-999,-999
ESCORT - Distance - transit tour,"@((df.tour_mode_is_transit) *(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,0,-999,-999,-999,-999,-999,-999
ESCORT - Distance - work stop purpose,"@((df.purpose == 'work') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.195,-999,-999,-999,-999,-999,-999
ESCORT - Distance - escort stop purpose,"@((df.purpose == 'escort') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.2596,-999,-999,-999,-999,-999,-999
ESCORT - Distance - shopping stop purpose,"@((df.purpose == 'shopping') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.286,-999,-999,-999,-999,-999,-999
ESCORT - Distance - eat out stop purpose,"@((df.purpose == 'eatout') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.2927,-999,-999,-999,-999,-999,-999
ESCORT - Distance - other maintenance stop purpose,"@((df.purpose == 'othmaint') * (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.2196,-999,-999,-999,-999,-999,-999
ESCORT - Distance - social/visiting stop purpose,"@((df.purpose == 'social') *  (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.3061,-999,-999,-999,-999,-999,-999
ESCORT - Distance - other discretionary stop purpose,"@((df.purpose == 'othdiscr') *  (np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8)))",-999,-999,-999,-0.2999,-999,-999,-999,-999,-999,-999
ESCORT - distance (calibration adjustment),"@(np.minimum((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 8))",-999,-999,-999,0,-999,-999,-999,-999,-999,-999
ESCORT - constant for transit tours (stop w/in walking distance of home,"@(np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0))",-999,-999,-999,-3,-999,-999,-999,-999,-999,-999
ESCORT - constant for transit tours (stop w/in walking distance of prim dest,"@(np.where(((df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0))",-999,-999,-999,-5,-999,-999,-999,-999,-999,-999
ESCORT - OOD Distance,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 11) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 11), 0)",-999,-999,-999,1.55,-999,-999,-999,-999,-999,-999
ESCORT - OOD Distance squared,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 11) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 11)) ** 2, 0)",-999,-999,-999,-0.2751715,-999,-999,-999,-999,-999,-999
ESCORT - OOD Distance cubed,"@np.where (np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 11) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 11)) ** 3, 0)",-999,-999,-999,0.0146333,-999,-999,-999,-999,-999,-999
ESCORT - Log of OOD distance,"@np.where(np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-999,-0.8910575,-999,-999,-999,-999,-999,-999
ESCORT - Negative OOD,"@np.where(np.minimum((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 8) - df.od_distance), 10) < 0, 1, 0)",-999,-999,-999,2.854201327,-999,-999,-999,-999,-999,-999
ESCORT - Logarithm term applied to all distances,"@np.where(((df.org_to_stop_dist + df.stop_to_dest_dist) > 8), np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist), 50)), 0)",-999,-999,-999,-0.3218,-999,-999,-999,-999,-999,-999
# SHOPPING,,,,,,,,,,,
SHOPPING - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,0.0026,-999,-999,-999,-999,-999
SHOPPING - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-0.0000109,-999,-999,-999,-999,-999
SHOPPING - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-0.3218,-999,-999,-999,-999,-999
SHOPPING - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,0.00873,-999,-999,-999,-999,-999
SHOPPING - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-0.00269,-999,-999,-999,-999,-999
SHOPPING - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-0.01045,-999,-999,-999,-999,-999
SHOPPING - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,0.002442,-999,-999,-999,-999,-999
SHOPPING - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-0.01308,-999,-999,-999,-999,-999
SHOPPING - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,0,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - work stop purpose,"@np.where(((~is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.195,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - escort stop purpose,"@np.where(((~is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2596,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - shopping stop purpose,"@np.where(((~is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.286,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - eat out stop purpose,"@np.where(((~is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2927,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - other maintenance stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2196,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - social/visiting stop purpose,"@np.where(((~is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.3061,-999,-999,-999,-999,-999
SHOPPING - indiv tour distance - other discretionary stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2999,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - work stop purpose,"@np.where(((is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.195,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - escort stop purpose,"@np.where(((is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2596,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - shopping stop purpose,"@np.where(((is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.286,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - eat out stop purpose,"@np.where(((is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2927,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - other maintenance stop purpose,"@np.where(((is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2196,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - social/visiting stop purpose,"@np.where(((is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.3061,-999,-999,-999,-999,-999
SHOPPING - joint tour distance - other discretionary stop purpose,"@np.where(((is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-0.2999,-999,-999,-999,-999,-999
SHOPPING - distance (calibration adjustment individual),"@np.where((~is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,0.1534,-999,-999,-999,-999,-999
SHOPPING - distance (calibration adjustment joint),"@np.where((is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,0.1766,-999,-999,-999,-999,-999
SHOPPING - constant for transit tours (stop w/in walking distance of home,"@np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-3,-999,-999,-999,-999,-999
SHOPPING - constant for transit tours (stop w/in walking distance of prim dest,"@np.where(((df.outbound) & (df.trip_num==1) & (dpt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-5,-999,-999,-999,-999,-999
SHOPPING - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9), 0)",-999,-999,-999,-999,0.6068811,-999,-999,-999,-999,-999
SHOPPING - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 2, 0)",-999,-999,-999,-999,-0.1338292,-999,-999,-999,-999,-999
SHOPPING - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 3, 0)",-999,-999,-999,-999,0.0069841,-999,-999,-999,-999,-999
SHOPPING - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-999,-999,-0.2722206,-999,-999,-999,-999,-999
SHOPPING - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 0, 1, 0)",-999,-999,-999,-999,1.006122015,-999,-999,-999,-999,-999
SHOPPING - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 1), 1, 0)",-999,-999,-999,-999,0.2,-999,-999,-999,-999,-999
# EATOUT,,,,,,,,,,,
EATOUT - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,-999,0.0026,-999,-999,-999,-999
EATOUT - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-999,-0.0000109,-999,-999,-999,-999
EATOUT - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-0.3218,-999,-999,-999,-999
EATOUT - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,0.00873,-999,-999,-999,-999
EATOUT - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-0.00269,-999,-999,-999,-999
EATOUT - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-0.01045,-999,-999,-999,-999
EATOUT - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,0.002442,-999,-999,-999,-999
EATOUT - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-0.01308,-999,-999,-999,-999
EATOUT - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,-999,0,-999,-999,-999,-999
EATOUT - indiv tour distance - work stop purpose,"@np.where(((~is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.195,-999,-999,-999,-999
EATOUT - indiv tour distance - escort stop purpose,"@np.where(((~is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2596,-999,-999,-999,-999
EATOUT - indiv tour distance - shopping stop purpose,"@np.where(((~is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.286,-999,-999,-999,-999
EATOUT - indiv tour distance - eat out stop purpose,"@np.where(((~is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2927,-999,-999,-999,-999
EATOUT - indiv tour distance - other maintenance stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2196,-999,-999,-999,-999
EATOUT - indiv tour distance - social/visiting stop purpose,"@np.where(((~is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.3061,-999,-999,-999,-999
EATOUT - indiv tour distance - other discretionary stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2999,-999,-999,-999,-999
EATOUT - joint tour distance - work stop purpose,"@np.where(((is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.195,-999,-999,-999,-999
EATOUT - joint tour distance - escort stop purpose,"@np.where(((is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2596,-999,-999,-999,-999
EATOUT - joint tour distance - shopping stop purpose,"@np.where(((is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.286,-999,-999,-999,-999
EATOUT - joint tour distance - eat out stop purpose,"@np.where(((is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2927,-999,-999,-999,-999
EATOUT - joint tour distance - other maintenance stop purpose,"@np.where(((is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2196,-999,-999,-999,-999
EATOUT - joint tour distance - social/visiting stop purpose,"@np.where(((is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.3061,-999,-999,-999,-999
EATOUT - joint tour distance - other discretionary stop purpose,"@np.where(((is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-0.2999,-999,-999,-999,-999
EATOUT - distance (calibration adjustment individual),"@np.where((~is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,0.1489,-999,-999,-999,-999
EATOUT - distance (calibration adjustment joint),"@np.where((is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,0.1938,-999,-999,-999,-999
EATOUT - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9), 0)",-999,-999,-999,-999,-999,0.55,-999,-999,-999,-999
EATOUT - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 2, 0)",-999,-999,-999,-999,-999,-0.1271654,-999,-999,-999,-999
EATOUT - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 3, 0)",-999,-999,-999,-999,-999,0.0076428,-999,-999,-999,-999
EATOUT - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-999,-999,-999,-0.2902516,-999,-999,-999,-999
EATOUT - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 0, 1, 0)",-999,-999,-999,-999,-999,0.143281489,-999,-999,-999,-999
EATOUT - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 1), 1, 0)",-999,-999,-999,-999,-999,0.2,-999,-999,-999,-999
#OTHER MAINTENANCE,,,,,,,,,,,
MAINTENANCE - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,-999,-999,0.0026,-999,-999,-999
MAINTENANCE - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-999,-999,-0.0000109,-999,-999,-999
MAINTENANCE - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-0.3218,-999,-999,-999
MAINTENANCE - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,0.00873,-999,-999,-999
MAINTENANCE - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-0.00269,-999,-999,-999
MAINTENANCE - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-0.01045,-999,-999,-999
MAINTENANCE - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,0.002442,-999,-999,-999
MAINTENANCE - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-0.01308,-999,-999,-999
MAINTENANCE - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,-999,-999,0,-999,-999,-999
MAINTENANCE - indiv tour distance - work stop purpose,"@np.where(((~is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.195,-999,-999,-999
MAINTENANCE - indiv tour distance - escort stop purpose,"@np.where(((~is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2596,-999,-999,-999
MAINTENANCE - indiv tour distance - shopping stop purpose,"@np.where(((~is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.286,-999,-999,-999
MAINTENANCE - indiv tour distance - eat out stop purpose,"@np.where(((~is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2927,-999,-999,-999
MAINTENANCE - indiv tour distance - other maintenance stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2196,-999,-999,-999
MAINTENANCE - indiv tour distance - social/visiting stop purpose,"@np.where(((~is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.3061,-999,-999,-999
MAINTENANCE - indiv tour distance - other discretionary stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2999,-999,-999,-999
MAINTENANCE - joint tour distance - work stop purpose,"@np.where(((is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.195,-999,-999,-999
MAINTENANCE - joint tour distance - escort stop purpose,"@np.where(((is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2596,-999,-999,-999
MAINTENANCE - joint tour distance - shopping stop purpose,"@np.where(((is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.286,-999,-999,-999
MAINTENANCE - joint tour distance - eat out stop purpose,"@np.where(((is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2927,-999,-999,-999
MAINTENANCE - joint tour distance - other maintenance stop purpose,"@np.where(((is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2196,-999,-999,-999
MAINTENANCE - joint tour distance - social/visiting stop purpose,"@np.where(((is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.3061,-999,-999,-999
MAINTENANCE - joint tour distance - other discretionary stop purpose,"@np.where(((is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-0.2999,-999,-999,-999
MAINTENANCE - distance (calibration adjustment individual),"@np.where((~is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,0.18,-999,-999,-999
MAINTENANCE - distance (calibration adjustment joint),"@np.where((is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,0.1113,-999,-999,-999
MAINTENANCE - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16), 0)",-999,-999,-999,-999,-999,-999,0.4273304,-999,-999,-999
MAINTENANCE - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16)) ** 2, 0)",-999,-999,-999,-999,-999,-999,-0.063652,-999,-999,-999
MAINTENANCE - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16)) ** 3, 0)",-999,-999,-999,-999,-999,-999,0.0019901,-999,-999,-999
MAINTENANCE - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-999,-999,-999,-999,-0.2692601,-999,-999,-999
MAINTENANCE - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) < 0, 1, 0)",-999,-999,-999,-999,-999,-999,0.743124288,-999,-999,-999
MAINTENANCE - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 16) < 1), 1, 0)",-999,-999,-999,-999,-999,-999,0.4,-999,-999,-999
#SOCIAL,,,,,,,,,,,
SOCIAL - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,-999,-999,-999,0.0026,-999,-999
SOCIAL - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-999,-999,-999,-0.0000109,-999,-999
SOCIAL - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-0.3218,-999,-999
SOCIAL - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,0.00873,-999,-999
SOCIAL - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-0.00269,-999,-999
SOCIAL - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-0.01045,-999,-999
SOCIAL - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,0.002442,-999,-999
SOCIAL - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-0.01308,-999,-999
SOCIAL - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,-999,-999,-999,0,-999,-999
SOCIAL - indiv tour distance - work stop purpose,"@np.where(((~is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.195,-999,-999
SOCIAL - indiv tour distance - escort stop purpose,"@np.where(((~is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2596,-999,-999
SOCIAL - indiv tour distance - shopping stop purpose,"@np.where(((~is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.286,-999,-999
SOCIAL - indiv tour distance - eat out stop purpose,"@np.where(((~is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2927,-999,-999
SOCIAL - indiv tour distance - other maintenance stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2196,-999,-999
SOCIAL - indiv tour distance - social/visiting stop purpose,"@np.where(((~is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.3061,-999,-999
SOCIAL - indiv tour distance - other discretionary stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2999,-999,-999
SOCIAL - joint tour distance - work stop purpose,"@np.where(((is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.195,-999,-999
SOCIAL - joint tour distance - escort stop purpose,"@np.where(((is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2596,-999,-999
SOCIAL - joint tour distance - shopping stop purpose,"@np.where(((is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.286,-999,-999
SOCIAL - joint tour distance - eat out stop purpose,"@np.where(((is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2927,-999,-999
SOCIAL - joint tour distance - other maintenance stop purpose,"@np.where(((is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2196,-999,-999
SOCIAL - joint tour distance - social/visiting stop purpose,"@np.where(((is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.3061,-999,-999
SOCIAL - joint tour distance - other discretionary stop purpose,"@np.where(((is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-0.2999,-999,-999
SOCIAL - distance (calibration adjustment individual),"@np.where((~is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,0.1392,-999,-999
SOCIAL - distance (calibration adjustment joint),"@np.where((is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,0.13,-999,-999
SOCIAL - constant for transit tours (stop w/in walking distance of home,"@np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-3,-999,-999
SOCIAL - constant for transit tours (stop w/in walking distance of prim dest,"@np.where(((df.outbound) & (df.trip_num==1) & (dpt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-5,-999,-999
SOCIAL - OOD Distance,"'@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9), 0)",-999,-999,-999,-999,-999,-999,-999,-0.4368483,-999,-999
SOCIAL - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 2, 0)",-999,-999,-999,-999,-999,-999,-999,0.1089924,-999,-999
SOCIAL - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 3, 0)",-999,-999,-999,-999,-999,-999,-999,-0.0076294,-999,-999
SOCIAL - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 50)), 0)",-999,-999,-999,-999,-999,-999,-999,-0.1081128,-999,-999
SOCIAL - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 0, 1, 0)",-999,-999,-999,-999,-999,-999,-999,-0.072029153,-999,-999
SOCIAL - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 1), 1, 0)",-999,-999,-999,-999,-999,-999,-999,0.2,-999,-999
#DISCRETIONARY,,,,,,,,,,,
DISCRETIONARY - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,-999,-999,-999,-999,0.0026,-999
DISCRETIONARY - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-999,-999,-999,-999,-0.0000109,-999
DISCRETIONARY - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-0.3218,-999
DISCRETIONARY - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,0.00873,-999
DISCRETIONARY - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-0.00269,-999
DISCRETIONARY - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-0.01045,-999
DISCRETIONARY - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,0.002442,-999
DISCRETIONARY - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-0.01308,-999
DISCRETIONARY - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,-999,-999,-999,-999,0,-999
DISCRETIONARY - indiv tour distance - work stop purpose,"@np.where(((~is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.195,-999
DISCRETIONARY - indiv tour distance - escort stop purpose,"@np.where(((~is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2596,-999
DISCRETIONARY - indiv tour distance - shopping stop purpose,"@np.where(((~is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.286,-999
DISCRETIONARY - indiv tour distance - eat out stop purpose,"@np.where(((~is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2927,-999
DISCRETIONARY - indiv tour distance - other maintenance stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2196,-999
DISCRETIONARY - indiv tour distance - social/visiting stop purpose,"@np.where(((~is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.3061,-999
DISCRETIONARY - indiv tour distance - other discretionary stop purpose,"@np.where(((~is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2999,-999
DISCRETIONARY - joint tour distance - work stop purpose,"@np.where(((is_joint) & (df.purpose == 'work')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.195,-999
DISCRETIONARY - joint tour distance - escort stop purpose,"@np.where(((is_joint) & (df.purpose == 'escort')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2596,-999
DISCRETIONARY - joint tour distance - shopping stop purpose,"@np.where(((is_joint) & (df.purpose == 'shopping')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.286,-999
DISCRETIONARY - joint tour distance - eat out stop purpose,"@np.where(((is_joint) & (df.purpose == 'eatout')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2927,-999
DISCRETIONARY - joint tour distance - other maintenance stop purpose,"@np.where(((is_joint) & (df.purpose == 'othmaint')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2196,-999
DISCRETIONARY - joint tour distance - social/visiting stop purpose,"@np.where(((is_joint) & (df.purpose == 'social')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.3061,-999
DISCRETIONARY - joint tour distance - other discretionary stop purpose,"@np.where(((is_joint) & (df.purpose == 'othdiscr')), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.2999,-999
DISCRETIONARY - distance (calibration adjustment individual),"@np.where((~is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,0,-999
DISCRETIONARY - distance (calibration adjustment joint),"@np.where((is_joint), (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]), 0)",-999,-999,-999,-999,-999,-999,-999,-999,0,-999
DISCRETIONARY - constant for transit tours (stop w/in walking distance of home,"@np.where(((~df.outbound) & (df.trip_num==1) & (odt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-3,-999
DISCRETIONARY - constant for transit tours (stop w/in walking distance of prim dest,"@np.where(((df.outbound) & (df.trip_num==1) & (dpt_skims[('SOV_FREE_DISTANCE', 'MD')]<3) & (df.tour_mode_is_transit)), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-5,-999
DISCRETIONARY - OOD Distance,"'@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27), 0)",-999,-999,-999,-999,-999,-999,-999,-999,0.28,-999
DISCRETIONARY - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27)) ** 2, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.0184,-999
DISCRETIONARY - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27)) ** 3, 0)",-999,-999,-999,-999,-999,-999,-999,-999,0.00036,-999
DISCRETIONARY - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27)), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.15788,-999
DISCRETIONARY - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) < 0, 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.072240928,-999
DISCRETIONARY - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 27) < 1), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-0.3737,-999
#ATWORK,,,,,,,,,,,
ATWORK - Distance squared,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 2)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.0026
ATWORK - Distance cubed,"((odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ** 3)",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.0000109
ATWORK - Log of distance,"@np.log(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.3218
ATWORK - Distance - return half tour,"@(~df.outbound) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.00873
ATWORK - Distance - 2nd stop of half tour,"@(df.trip_num == 2) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.00269
ATWORK - Distance - 3rd+ stop on half tour,"@(df.trip_num > 3) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.01045
ATWORK - Distance - shared ride tour,"@(df.tour_mode_is_shared_ride) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.002442
ATWORK - Distance - walk/bike tour,"@((df.tour_mode==WALK)|(df.tour_mode==BIKE)) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')])",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.01308
ATWORK - Distance - transit tour,"@((df.tour_mode_is_transit) * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]))",-999,-999,-999,-999,-999,-999,-999,-999,-999,0
ATWORK - distance - work stop purpose,"@(df.purpose == 'work') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.195
ATWORK - distance - escort stop purpose,"@(df.purpose == 'escort') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.2596
ATWORK - distance - shopping stop purpose,"@(df.purpose == 'shopping') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.286
ATWORK - distance - eat out stop purpose,"@(df.purpose == 'eatout') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.2927
ATWORK - distance - other maintenance stop purpose,"@(df.purpose == 'othmaint') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.2196
ATWORK - distance - social/visiting stop purpose,"@(df.purpose == 'social') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.3061
ATWORK - distance - other discretionary stop purpose,"@(df.purpose == 'othdiscr') * (odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.2999
ATWORK - distance (calibration adjustment),"(odt_skims[('SOV_FREE_DISTANCE', 'MD')] + dpt_skims[('SOV_FREE_DISTANCE', 'MD')]) ",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.148
ATWORK - OOD Distance,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.0080384
ATWORK - OOD Distance squared,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 2, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,-0.1285871
ATWORK - OOD Distance cubed,"@np.where (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)) ** 3, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.0098048
ATWORK - Log of OOD distance,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) > 0, np.log(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9)), 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.4478928
ATWORK - Negative OOD,"@np.where(np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 0, 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.60909173
ATWORK - OOD bin 0 to 1 mile,"@np.where((np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) >= 0) & (np.minimum((df.org_to_stop_dist + df.stop_to_dest_dist - df.od_distance), 9) < 1), 1, 0)",-999,-999,-999,-999,-999,-999,-999,-999,-999,0.2
