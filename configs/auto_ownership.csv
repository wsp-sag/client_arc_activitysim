Description,Expression,car0,car1,car2,car3plus
Alternative specific constant: 1 driver,@df['num_drivers'] == 1,-4.8600,0.0000,-0.9590,-3.9000
Alternative specific constant: 2 driver,@df['num_drivers'] == 2,-4.4700,-2.0100,0.0000,-1.5400
Alternative specific constant: 3+ driver,@df['num_drivers'] >= 3,-4.0500,-2.1600,-1.8800,0.0000
Household income [0-10k): 1 driver household,@((df['num_drivers']==1) & (df['income_segment']==1)),5.3000,0.0000,-1.4500,-1.4500
Household income [0-10k): 2 driver household,@((df['num_drivers']==2) & (df['income_segment']==1)),5.3000,3.3100,0.0000,-1.4500
Household income [0-10k): 3+ driver household,@((df['num_drivers']>=3) & (df['income_segment']==1)),5.3000,3.3100,3.3100,0.0000
Household income [10k-30k): 1 driver household,@((df['num_drivers']==1) & (df['income_segment']==2)),4.3100,0.0000,-0.8900,-0.8900
Household income [10k-30k): 2 driver household,@((df['num_drivers']==2) & (df['income_segment']==2)),4.3100,2.8600,0.0000,-0.8900
Household income [10k-30k): 3+ driver household,@((df['num_drivers']>=3) & (df['income_segment']==2)),4.3100,2.8600,2.8600,0.0000
Household income [30k-60k): 1 driver household,@((df['num_drivers']==1) & (df['income_segment']==3)),2.3900,0.0000,-0.5320,-0.5320
Household income [30k-60k): 2 driver household,@((df['num_drivers']==2) & (df['income_segment']==3)),2.3900,1.8400,0.0000,-0.5320
Household income [30k-60k): 3+ driver household,@((df['num_drivers']>=3) & (df['income_segment']==3)),2.3900,1.8400,1.8400,0.0000
Household income [60k-100k): 1 driver household,@((df['num_drivers']==1) & (df['income_segment']==4)),0.8580,0.0000,-0.3990,-0.3990
Household income [60k-100k): 2 driver household,@((df['num_drivers']==2) & (df['income_segment']==4)),0.8580,0.8240,0.0000,-0.3990
Household income [60k-100k): 3+ driver household,@((df['num_drivers']>=3) & (df['income_segment']==4)),0.8580,0.8240,0.8240,0.0000
Household income [100k-+Inf): 1 driver household,@((df['num_drivers']==1) & (df['income_segment']==5)),,,,
Household income [100k-+Inf): 2 driver household,@((df['num_drivers']==2) & (df['income_segment']==5)),,,,
Household income [100k-+Inf): 3+ driver household,@((df['num_drivers']>=3) & (df['income_segment']==5)),,,,
# Workers to drivers ratio: 1 driver household,@((df['num_drivers']==1) * (df['num_workers'] / df['num_drivers'])),-1.0000,,,
Workers to drivers ratio: 2 driver household,@(df['num_drivers']==2 * (df['num_workers'] / df['num_drivers'])),-1.0000,-0.4950,,
Workers to drivers ratio: 3+ driver household,@(df['num_drivers']>=3 * (df['num_workers'] / df['num_drivers'])),-1.0000,-0.4950,-0.4950,
Young adults to drivers ratio: 1 driver household,@(df['num_drivers']==1 * (df['num_young_adults'] / df['num_drivers'])),-0.9460,-0.9460,,
Young adults to drivers ratio: 2 driver household,@(df['num_drivers']==2 * (df['num_young_adults'] / df['num_drivers'])),-0.5040,-0.9460,,
Young adults to drivers ratio: 3+ driver household,@(df['num_drivers']>=3 * (df['num_young_adults'] / df['num_drivers'])),-0.5040,-0.5040,,
School children to drivers ratio: 1 driver household,@(df['num_drivers']==1 * (df['num_school_children']/ df['num_drivers'])),-0.1220,-0.1220,,
School children to drivers ratio: 2 driver household,@(df['num_drivers']==2 * (df['num_school_children'] / df['num_drivers'])),-0.1220,,,
School children to drivers ratio: 3+ driver household,@(df['num_drivers']>=3 * (df['num_school_children'] / df['num_drivers'])),,,,
Old retirees to drivers ratio: 1 driver household,@(df['num_drivers']==1 * (df['num_old_retirees'] / df['num_drivers'])),0.7390,,,
Old retirees to drivers ratio: 2 driver household,@(df['num_drivers']==2 * (df['num_old_retirees'] / df['num_drivers'])),0.7390,1.2300,,
Old retirees to drivers ratio: 3+ driver household,@(df['num_drivers']>=3 * (df['num_old_retirees'] / df['num_drivers'])),0.7390,1.2300,1.2300,
# Worker mandatory tour rail mode portion: 1 driver,household	drivers==1++workersRailProportion,1.5		-0.892	-0.892,,,
# Worker mandatory tour rail mode portion: 2 driver,household	drivers==2++workersRailProportion,1.5	0.467		-0.892,,,
# Worker mandatory tour rail mode portion: 3+ driver,household	drivers>=3++workersRailProportion,1.5	0.467	0.467,,,
# Student mandatory tour rail mode portion: 1 driver,household	drivers==1++studentsRailProportion,1.5,,,
# Student mandatory tour rail mode portion: 2 driver,household	drivers==2++studentsRailProportion,1.5	0.465,,,
# Student mandatory tour rail mode portion: 3+ driver,household	drivers>=3++studentsRailProportion,1.5	0.465	0.465,,,
Auto - Transit zonal accessibility: 1 driver household,@(df['num_drivers']==1 * (df['auOpTotal']) - df['trOpTotal']) / 10),,,,
Auto - Transit zonal accessibility: 2 driver household,@(df['num_drivers']==2 * (df['auOpTotal']) - df['trOpTotal']) / 10),,,,
Auto - Transit zonal accessibility: 3+ driver household,@(df['num_drivers']>=3 * (df['auOpTotal']) - df['trOpTotal']) / 10),,,,
Premium rail accessible retail employment: 1 driver,@(df['num_drivers']==1 * (df['retail'] / 10000)),,,,
Premium rail accessible retail employment: 2 driver,@(df['num_drivers']==2 * (df['retail'] / 10000)),,,,
Premium rail accessible retail employment: 3+ driver,@(df['num_drivers']>=3 * (df['retail'] / 10000)),,,,
Worker mandatory tour auto dependancy: 1 driver,@(df['num_drivers']==1 * ((df['auPkTotal'] + df['auOpTotal']) - (df['trPkTotal'] + df['trOpTotal']))),-0.5,0.0505,0.0505,
Worker mandatory tour auto dependancy: 2 driver,@(df['num_drivers']==2 * ((df['auPkTotal'] + df['auOpTotal']) - (df['trPkTotal'] + df['trOpTotal']))),-0.5,-0.238,0.0505,
Worker mandatory tour auto dependancy: 3+ driver,@(df['num_drivers']>=3 *((df['auPkTotal'] + df['auOpTotal']) - (df['trPkTotal'] + df['trOpTotal']))),-0.5,-0.238,-0.238,
Calibration constant,1,-0.73,0.002295512,1.014943467,
Calibration constant: One Worker HH,@df['num_workers']==1,0.70232794,-0.440726136,,
Calibration constant: Two Worker HH,@df['num_workers']==2,1.255296373,-0.875347621,,
Calibration constant: Three Plus Worker HH,@df['num_workers']>=3,1.484529639,-2.63063667,,
Calibration constant: Income	HH,@df['income_segment']==1,-0.43,-0.14,0.2,
Calibration constant: Income,@((df['hincp']>=10000)&(df['hincp']<20000)),0.13,-0.14,0.2,
Calibration constant: Income,@((df['hincp']>=20000)&(df['hincp']<30000)),-0.92,-0.14,0.2,
Calibration constant: Income,@((df['hincp']>=30000)&(df['hincp']<50000)),-0.22,-0.14,0.2,
Calibration constant: Income,@((df['hincp']>=50000)&(df['hincp']<100000)),-0.6,-0.14,0.2,
Calibration constant: Income,@df['income_segment']==5,0.18,-0.14,0.2,
Calibration constant: One Worker HH,@df['num_workers']==0,0.28,,,
Calibration constant: Three Plus Worker HH,@df['num_workers']>=3,-0.31,-0.8,,
